Repository Structure

bashCopyprivate-repo/
  ├── public/            # submodule of public repo
  ├── enterprise/        # private features
  ├── staging/
  │   ├── config/       # staging-specific configs
  │   └── data/         # staging test data
  └── scripts/
      └── staging/      # staging management scripts

Branch Strategy

mermaidCopygraph TD
    F[Feature Branch] --> PS[Private Staging]
    PS --> PM[Private Main]
    PM -- Auto Sync --> PU[Public Main]

Staging Workflow Configuration

yamlCopy# .github/workflows/staging.yml
name: Staging Deployment

on:
  push:
    branches: [staging]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true  # Important: pulls public repo
          
      - name: Setup Staging Environment
        run: |
          cp staging/config/.env.staging .env
          
      - name: Deploy to Staging
        env:
          STAGING_URL: ${{ secrets.STAGING_URL }}
        run: |
          npm run deploy:staging
          
      # Only sync to public if public-facing changes exist
      - name: Check Public Changes
        id: check-public
        run: |
          if git diff --quiet HEAD^1 public/; then
            echo "No changes to public repo"
          else
            echo "::set-output name=has_changes::true"
          fi
          
      - name: Sync Public Repo
        if: steps.check-public.outputs.has_changes == 'true'
        run: |
          cd public
          git checkout main
          git pull origin main
          git push origin main

Environment Configuration

javascriptCopy// config/environments.js
module.exports = {
  staging: {
    publicFeatures: {
      enabled: true,
      source: './public'
    },
    privateFeatures: {
      enabled: true,
      adminDashboard: true,
      analytics: true
    },
    database: {
      sanitize: true,
      syncFromProd: false
    }
  }
};

Testing Setup

javascriptCopy// scripts/test-staging.js
async function runStagingTests() {
  // First test private features
  await runPrivateTests();
  
  // Then test public integration
  if (hasPublicChanges()) {
    await runPublicIntegrationTests();
  }
}

Database Management

javascriptCopy// scripts/staging/prepare-db.js
async function prepareStagingDb() {
  // Clone production schema
  await cloneProductionSchema();
  
  // Generate test data for private features
  await seedPrivateTestData();
  
  // Generate minimal public data needed
  await seedPublicTestData();
}

Feature Management

javascriptCopy// src/config/features.js
const features = {
  staging: {
    // Public features inherited from public repo
    ...require('./public/features'),
    
    // Private features
    enterprise: {
      admin: true,
      analytics: true,
      customReports: true
    }
  }
};

Development Scripts

jsonCopy{
  "scripts": {
    "staging:setup": "node scripts/staging/setup.js",
    "staging:deploy": "node scripts/staging/deploy.js",
    "staging:test": "jest --config jest.staging.config.js",
    "staging:sync-public": "node scripts/staging/sync-public.js"
  }
}